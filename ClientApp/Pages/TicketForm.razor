@using ClientApp.Services
@using Shared.Models
@using Shared
@inject IApiCaller Apicaller
<EditForm Model="NewTicket" OnValidSubmit="HandleSubmit" class="card w-50">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <label>
        Title
  
    <InputText @bind-Value="NewTicket.Title"></InputText>
    </label>
    <label>
        Description
    <InputTextArea @bind-Value="NewTicket.Description"></InputTextArea>
    </label>
    <label>
        Submitted by:
    <InputText @bind-Value="NewTicket.SubmittedBy"></InputText>
    </label>
    <label>
        Tags:
       
    </label>
    <InputSelect  @bind-Value="Tag" >
        
        @foreach (var tag in Enum.GetNames(typeof(Tag)))
        {
            <option value="@tag" >@tag </option>
        }

    
    </InputSelect>

    <input type="submit" value="Create a ticket" />
</EditForm>

@code {
    public TicketApiModel NewTicket { get; set; } = new();
    public string Tag { get; set; }
    private bool isLoading;
    [Parameter]
    public Action? OnPostTicket { get; set; }

    private async Task HandleSubmit()
    {
        isLoading = true;

        // Skicka det nya animalet till API:t
        NewTicket.Tags.Add(Tag);
        await Apicaller.PostTicket(NewTicket);

        isLoading = false;

        OnPostTicket?.Invoke();
    }
    

}
