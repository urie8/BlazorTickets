@page "/"
@using ClientApp.Services
@using Shared.Models
@using System.Diagnostics
@inject IApiCaller ApiCaller
<PageTitle>Home</PageTitle>

   

<TicketForm OnPostTicket="async () => await UpdateTicketList()"></TicketForm>

<input type="text"  @oninput=FilterList  /> 

@if (isSearching)
{
    @foreach (var ticket in FilteredTickets)
    {
             <Ticket CurrentTicket="ticket"></Ticket>
    }

}
else
{
    @foreach (var ticket in Tickets)
    {
            <Ticket CurrentTicket="ticket"></Ticket>
    }

}


@code{
    public List<TicketModel> Tickets { get; set; } = new();

    public List<TicketModel> FilteredTickets { get; set; } = new();

    private bool isSearching = false;
    private bool isDetails = false;




    protected override async Task OnInitializedAsync(){
        try
        {
            Tickets = await ApiCaller.GetTickets();

        }
        catch (Exception ex)
        {
            Trace.WriteLine(ex); 
        }
    }

    private async Task UpdateTicketList()
    {
        try
        {
            Tickets = await ApiCaller.GetTickets();

        }
        catch (Exception ex)
        {
            Trace.WriteLine(ex);
        }

        StateHasChanged();
    }

    public void FilterList(ChangeEventArgs e)
    {


        FilteredTickets.Clear();

        string inputSearch = e.Value.ToString();

        isSearching = false;

        if(inputSearch != null)
        {
            isSearching = true;
        }


        foreach (var ticket in Tickets.Where(t => t.Title.Contains(inputSearch) || t.Description.Contains(inputSearch)))
        {
                FilteredTickets.Add(ticket);
        }
    }
}